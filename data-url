data:text/html;base64,<!DOCTYPE html>
<html>
  <head>
    <title>rtop</title>
    <meta charset="utf-8" />
    <style>html, body, div, h1, h2, img { 
  margin: 0; 
  padding: 0; 
  border: 0; 
  font-size: 100%; 
  font: inherit; 
  vertical-align: baseline; 
}
html { 
  background: #1d1d1e;
  color: white;
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}
.post { 
  display: none; 
  line-height: 1;
  height: 100vh;
  flex-direction: column;
  padding: 8px 70px 13px 70px;
  box-sizing: border-box;
  align-items: center;
}
.header { 
  margin-bottom: 10px; 
  z-index: 1; 
}
.header a {
  font-size: 20px;
  font-weight: 500;
  color: white;
  text-decoration: none;
   
}
.header h1 {
  font-size: 14px;
  font-weight: 400;
  opacity: 0.3;
  margin-top: 5px; 
}
.header h1 a {
  font-size: 14px;
  font-weight: 400; 
}
.header h1 a:hover {
  text-decoration: underline; 
}
.media-container {
  flex-grow: 1;
  height: 0;
  width: 100%;
  user-select: none; 
  -webkit-user-select: none; 
}
.media {
  max-height: 100%;
  max-width: 100%;
  display: block;
  margin: auto;
  border-radius: 5px;
  min-height: 50px; 
}
.media-container img {
  background: url('data:image/svg+xml,<svg width="32" height="32" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path fill="white" d="M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z"><animateTransform attributeName="transform" type="rotate" from="0 12 12" to="360 12 12" dur="0.75s" repeatCount="indefinite"/></path></svg>') center center no-repeat;
}
.active {
  display: flex;
}
.svg-button {
  opacity: 0.3;
  transition: 0.2s;
}
.svg-button:hover {
  opacity: 0.5;
  cursor: pointer;
}
.prev-button, .next-button {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 70px;
  height: 100px;
  top: 50%;
  transform: translateY(-50%);
  border-radius: 13px;
  z-index: 2; 
  user-select: none;
  -webkit-user-select: none;
}
.prev-button {
  left: 0;
}
.next-button {
  right: 0;
}
.hidden {
  display: none; 
}
.counter-container {
  position: absolute;
  bottom: 9px;
  right: 11px;
  display: flex;
  flex-direction: row;
  align-items: end; 
  padding: 5px;
  border-radius: 13px;
  z-index: 2;
} 
.fetch-spinner {
  fill: white;
  opacity: 0.3;
  padding-bottom: 1px; 
  margin-right: 8px; 
} 
.input-spinner {
  display: none;
  fill: white;
  animation: spinner-animation .75s infinite linear; 
}
.counter {
  font-size: 14px;
  opacity: 0.3;
  margin: 0;
  user-select: none;
  -webkit-user-select: none;
  z-index: 2;
}
.nsfw .media {
  filter: brightness(20%) blur(35px);
}
.nsfw .nsfw-banner {
  display: flex;
}
.nsfw-banner {
  display: none;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  z-index: 1; 
}
.nsfw-banner h1 {
  margin-bottom: 11px; 
}
.nsfw-banner button {
  font-size: 12px; 
}
.fetch-spinner path {
  transform-origin: center;
  animation: spinner-animation .75s infinite linear; 
} 
@keyframes spinner-animation {
  100% {
    transform: rotate(360deg);
  }  
}
.home {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  background: rgba(30, 30, 31, 0.75);
  backdrop-filter: blur(35px);
  -webkit-backdrop-filter: blur(35px);
  flex-direction: column; 
}
.close-button {
  display: none;
  position: absolute;
  width: 32px;
  height: 32px;
  padding: 10px;
  left: 10px;
  top: 4px;
  z-index: 2;
} 
.home-error {
  display: none;
  position: absolute;
  top: 189px;
  padding: 11px;
  border-radius: 4px;
  margin-top: 25px;
  background: #631f1d;
  margin-bottom: 0; 
}
.home-area {
  display: none;
  position: absolute;
  width: 100%;
  height: 100%; 
}
.input-container {
  display: flex;
  flex-direction: row;
  border-radius: 4px;
  overflow: hidden;
  border: 4px solid white;
  background: white; 
}
.input-container:focus-within {
  outline: 3px solid rgb(31, 56, 116); 
}
.subreddit-input {
  border: none;
  width: 250px;
  font-size: 18px;
  padding: 0 7px;
  outline: none; 
}
.input-button {
  display: flex;
  justify-content: center;
  align-items: center;
  border: none;
  border-radius: 2px;
  background: white;
  width: 37px;
  height: 37px; 
}
.input-button:hover {
  cursor: pointer; 
}
.input-arrow {
  opacity: 0.3; 
}
.blue-button {
  background: rgb(72, 119, 230); 
}
.blue-button svg {
  opacity: 1; 
}
.blue-button path {
  stroke: white; 
}
.github-icon, .home-button {
  position: absolute;
  padding: 10px;
}
.github-icon {
  width: 28px;
  height: 28px;
  top: 10px;
  right: 15px;
  z-index: 2;
}
.home-button {
  width: 31px;
  height: 31px;
  top: 6px;
  left: 13px;
  z-index: 2; 
  border-radius: 13px;
}
.home-popup {
  display: flex;
  position: relative;
  width: 380px;
  flex-direction: column;
  border-radius: 10px;
  padding: 15px;
  align-items: center;
  z-index: 1; 
  padding-bottom: 55px;
}
.past-menu {
  margin-top: 25px; 
  font-size: 14px; 
  appearance: menulist-button;
}
.logo {
  margin-bottom: 8px; 
  font-size: 22px;
}
.description {
  margin-bottom: 25px; 
  opacity: 0.7;
  font-size: 17px;
}
noscript {
  display: flex;
  width: 100%;
  height: 100%;
  background: #1d1d1e;
  position: absolute;
  z-index: 123456;
}
noscript span {
  margin: auto;
}
</style>
    <script>function createPost({
  title, 
  domain, 
  timeAgo, 
  galleryCounter, 
  redditURL, 
  mediaURL, 
  posterURL,
  isVideo, 
  videoHeight, 
  over18 
}) {
  let postElem = document.createElement('div');

  postElem.innerHTML = `<div class="post ${over18 ? 'over18' : ''}">
    <div class="header">
      <a href="${redditURL}">${title}</a>
      <h1>${timeAgo} (<a href="${mediaURL}">${domain}</a>${galleryCounter})</h1>
    </div>
    <div class="media-container">
      ${isVideo 
        ? `<video data-src="${mediaURL}" poster="${posterURL}" height="${videoHeight}" preload="none" class="media" playsinline controls loop>`
        : `<img data-src="${mediaURL}" class="media">`
       }
    </div>
  </div>`;

  return postElem.firstChild;
}



// convert an array of JSON reddit post data into an array of post elements
function createPosts(children) {
  let newPosts = [];
  let openCount = 0;
  
  for (let i = 0; i < children.length; i++) {
    let postData = children[i].data;

    // load crosspost
    const crosspostParentList = postData.crosspost_parent_list;
    if (crosspostParentList && crosspostParentList.length > 0) {
      postData = crosspostParentList[0];
    }
    
    const title = postData.title;
    let domain = postData.domain;
    
    const timeAgo = timeAgoStr(new Date() - new Date(postData.created_utc * 1000));
    
    const redditURL = 'https://old.reddit.com' + postData.permalink;
    let mediaURL = postData.url;
    let posterURL = '';

    let isVideo = false;
    let videoHeight = 0;

    const over18 = postData.over_18;

    // reddit/imgur image
    if (domain === 'i.redd.it' || (domain === 'i.imgur.com' && mediaURL.slice(-5) !== '.gifv')) {
      // nothing to do here
    }
    // reddit gallery
    else if (domain === 'reddit.com') {
      const galleryData = postData.gallery_data;
      if (!galleryData || !galleryData.items) {
        console.warn(`Warning: gallery not found, skipping '${title}' - ${redditURL}\n`);
        continue;
      }

      const galleryItems = galleryData.items;
      const numItems = galleryItems.length;

      for (let j = 0; j < numItems; j++) {
        const item = galleryItems[j];
        const mediaID = item.media_id;

        const mimeType = postData.media_metadata[mediaID].m;
        if (!mimeType) {
          console.warn(`Warning: gallery post ${j+1}/${numItems}: image not found, skipping image in gallery '${title}' - ${redditURL}\n`);
          continue;
        }

        const ext = mimeType.split('/').pop();
        mediaURL = `https://i.redd.it/${mediaID}.${ext}`;

        const postElem = createPost({ 
          title: item.caption ? `${title}: ${item.caption}` : title,
          domain: domain,
          timeAgo: timeAgo,
          redditURL: redditURL,
          mediaURL: mediaURL,
          posterURL: '',
          isVideo: false,
          videoHeight: 0,
          galleryCounter: `, image ${j+1}/${numItems}`,
          over18: over18
        });
        newPosts.push(postElem);
      }
      openCount++;
      continue;
    }
    // reddit video
    else if (domain === 'v.redd.it') {
      const secureMedia = postData.secure_media;
      if (!secureMedia || !secureMedia.reddit_video) {
        console.warn(`Warning: video not found, skipping '${title}' - ${redditURL}\n`);
        continue;
      }
      const redditVideo = secureMedia.reddit_video;

      mediaURL = redditVideo.hls_url;
      if (!mediaURL) {
        console.warn(`Warning: HLS video URL not found, skipping '${title}' - ${redditURL}\n`);
        continue;
      }

      if (postData.preview && postData.preview.images && postData.preview.images[0].source) {
        posterURL = postData.preview.images[0].source.url;
      }

      mediaURL = mediaURL.split('?')[0];      // remove tracking
      isVideo = true;
      videoHeight = redditVideo.height;
    }
    // video fallback
    // optional chaining would be good here, but browser compatibility isn't great
    else if (
      postData.preview && 
      postData.preview.reddit_video_preview && 
      postData.preview.reddit_video_preview.hls_url
    ) {
      const redditVideoPreview = postData.preview.reddit_video_preview;

      mediaURL = redditVideoPreview.hls_url.split('?')[0];    // remove tracking
      posterURL = postData.preview.images[0].source.url;
      isVideo = true;
      videoHeight = redditVideoPreview.height;
      domain = new URL(mediaURL).hostname;
    }
    // image fallback
    else if (
      postData.preview && 
      postData.preview.images && 
      postData.preview.images[0] && 
      postData.preview.images[0].source && 
      postData.preview.images[0].source.url
    ) {
      mediaURL = postData.preview.images[0].source.url;
      domain = new URL(mediaURL).hostname;
    }
    else {
      console.warn(`Warning: invalid domain '${domain}', skipping '${title}' - ${redditURL}\n`);
      continue;
    }

    const postElem = createPost({ 
      title: title,
      domain: domain,
      timeAgo: timeAgo,
      redditURL: redditURL,
      mediaURL: mediaURL,
      posterURL: posterURL,
      isVideo: isVideo,
      videoHeight: videoHeight,
      galleryCounter: '',
      over18: over18
    });

    newPosts.push(postElem);
    openCount++;
  }
  console.log(`Opened ${openCount}/${children.length} posts`);

  return newPosts;
}



function timeAgoStr(delta) {
  const seconds = Math.floor(delta / 1000);

  if (seconds < 60) {
    return 'just now';
  }
  if (seconds < 3600) {
    const minutes = Math.floor(seconds / 60);
    return minutes > 1 ? minutes + ' minutes ago' : '1 minute ago';
  }
  if (seconds < 86400) {
    const hours = Math.floor(seconds / 3600);
    return hours > 1 ? hours + ' hours ago' : '1 hour ago';
  }

  const days = Math.floor(seconds / 86400);

  if (days < 30) {
    return days > 1 ? days + ' days ago' : '1 day ago';
  }
  if (days < 360) {
    const months = Math.floor(days / 30);
    return months > 1 ? months + ' months ago' : '1 month ago';
  }

  const years = Math.floor(days / 365);
  return years > 1 ? years + ' years ago' : '1 year ago';
}



function removePosts() {
  const video = document.querySelector('.active video');
  if (video !== null) {
    video.pause();
    video.removeAttribute('src');
    video.load();
  }
  document.querySelectorAll('.post').forEach(post => {
    post.querySelector('.media').removeAttribute('src');
    post.remove();
  });
}



document.addEventListener('DOMContentLoaded', function() {
  let p = 0;              // post index
  let maxIndex = -1;      // max post index
  let triggerIndex = 0;   // fetch new posts when this index is active
  let after = '';
  let nsfw = false;
  let url = '';

  const prevButton  = document.querySelector('.prev-button');
  const nextButton  = document.querySelector('.next-button');
  const counterElem = document.querySelector('.counter');
  const fetchSpinner = document.querySelector('.fetch-spinner');

  const homePage    = document.querySelector('.home');
  const closeButton = document.querySelector('.close-button');
  const homeArea    = document.querySelector('.home-area');
  const homeButton  = document.querySelector('.home-button');
  const errorElem   = document.querySelector('.home-error');

  const pastMenu    = document.querySelector('.past-menu');
  const inputElem   = document.querySelector('.subreddit-input');
  const inputButton = document.querySelector('.input-button');
  const inputSpinner = document.querySelector('.input-spinner');
  const inputArrow   = document.querySelector('.input-arrow');

  // check if HLS videos are supported
  if (!document.createElement('video').canPlayType('application/vnd.apple.mpegURL')) {
    errorElem.style.display = 'block';
    errorElem.innerHTML = 'Error: This browser is not officially supported. Please use Safari instead.';
  }


  function loadPost(i) {
    const posts = document.querySelectorAll('.post');

    if (i < 0 || i >= posts.length) {
      return;
    }

    // fetch new posts on trigger
    if (i === triggerIndex && after !== null) {
        fetchSpinner.classList.remove('hidden');
        fetch(url + '&after=' + after)
          .then(resp => resp.ok ? resp.json() : null)
          .then(json => {
              if (json === null) {
                return;
              }
              const nextPosts = createPosts(json['data']['children']);
              if (nextPosts.length === 0) {
                // no images/videos found, stop here
                after = null;
                return;
              }
              document.body.append(...nextPosts);

              after = json['data']['after'];
              triggerIndex = posts.length + Math.max(0, nextPosts.length - 5);

              nextButton.classList.remove('hidden');
              counterElem.textContent = p+1 + '/' + (posts.length + nextPosts.length);
          })
          .catch(err => console.error(err))
          .finally(() => fetchSpinner.classList.add('hidden'));
    }

    // remove current video from memory
    const video = posts[p].querySelector('video');
    if (video !== null) {
      video.pause();
      video.removeAttribute('src');
      video.load();
      video.removeAttribute('width');
    }

    posts[p].classList.remove('active');
    p = i;
    posts[p].classList.add('active');

    if (!nsfw) {
      if (posts[p].classList.contains('over18')) {
        document.body.classList.add('nsfw');
      } else {
        document.body.classList.remove('nsfw');
      }
    }

    // load next media
    const media = posts[p].querySelector('.media');
    media.src = media.getAttribute('data-src');

    if (media.localName === 'video') {
      // stop video controls from glitching 
      media.width = media.clientWidth;
    }

    // preload posts
    if (p > maxIndex) {
      maxIndex = p;

      for (let j = p+1; j < Math.min(posts.length, p+5); j++) {
        const media = posts[j].querySelector('.media');
        media.src = media.getAttribute('data-src');
      }
    }

    prevButton.classList.remove('hidden');
    nextButton.classList.remove('hidden');

    if (p === 0) {
      prevButton.classList.add('hidden');
    }
    if (p === posts.length-1) {
      nextButton.classList.add('hidden');
    }

    counterElem.textContent = p+1 + '/' + posts.length;
  }



  function prevPost() { loadPost(p-1) }
  function nextPost() { loadPost(p+1) }



  function search() {
    const pattern = /^[a-zA-Z0-9][a-zA-Z0-9_]{2,20}$/;
    let input = inputElem.value.trim();
    inputElem.blur();

    if (input.length === 0) {
      return;
    }
    if (!pattern.test(input)) {
      errorElem.style.display = 'block';
      errorElem.innerHTML = 'Error: Invalid subreddit name.';
      return;
    }

    inputSpinner.style.display = 'block';
    inputArrow.style.display = 'none';

    const initURL = `https://api.reddit.com/r/${input}/top.json?t=${pastMenu.value}&limit=25`;

    fetch(initURL)
      .then(resp => resp.ok ? resp.json() : Promise.reject(new Error()))
      .then(json => {
        const posts = createPosts(json['data']['children']);
        if (posts.length === 0) {
          throw new Error();
        }

        removePosts();
        document.body.append(...posts);

        // reset state
        p = 0;
        maxIndex = -1;
        triggerIndex = Math.max(0, posts.length - 5);
        after = json['data']['after'];
        url = initURL;

        homePage.style.display = 'none';
        closeButton.style.display = 'block';
        homeArea.style.display = 'block';
        errorElem.style.display = 'none';

        document.title = `rtop ${input} ${pastMenu.value !== 'all' ? 'past ' + pastMenu.value : 'all-time'}`;

        loadPost(0);
      })
      .catch(_ => {
        errorElem.style.display = 'block';
        if (!navigator.onLine) {
          errorElem.innerHTML = 'Error: Your internet connection appears to be offline. Please reconnect and try again.';
        } else {
          errorElem.innerHTML = 'Error: Unable to load subreddit data. Please try again or try a different subreddit.';
        }
      })
      .finally(() => {
        inputSpinner.style.display = 'none';
        inputArrow.style.display = 'block';
      });
  }

  // Event listeners

  window.addEventListener('keydown', (e) => {
    if (homePage.style.display === 'none') {
      if (e.keyCode === 37) {
        prevPost();
      } else if (e.keyCode === 39) { 
        nextPost();
      } else if (e.keyCode === 32 && !document.body.classList.contains('nsfw')) {
        const video = document.querySelector('.active video');
        if (video !== null) {
          video.paused ? video.play() : video.pause();
        }
      }
    }
  });

  prevButton.addEventListener('click', prevPost);
  nextButton.addEventListener('click', nextPost);

  closeButton.addEventListener('click', () => homePage.style.display = 'none');
  homeArea.addEventListener('click', () => homePage.style.display = 'none');
  homeButton.addEventListener('click', () => homePage.style.display = 'flex');

  inputElem.addEventListener('input', (e) => {
    if (e.target.value.length > 0) {
      inputButton.classList.add('blue-button');
    } else {
      inputButton.classList.remove('blue-button');
    }
  });

  inputElem.addEventListener('keydown', (e) => { if (e.keyCode === 13) search() });
  document.querySelector('.input-button').addEventListener('click', search);

  document.querySelector('.nsfw-banner button').addEventListener('click', () => {
    document.body.classList.remove('nsfw');
    nsfw = true;
  });
});
</script>
  </head>
  <body>
    <noscript>
      <span>Please enable JavaScript to use this website.</span>
    </noscript>
    <div class="home">
      <svg class="close-button svg-button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="32" height="32" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M18 6L6 18M6 6l12 12"></path>
      </svg>
      <a href="https://github.com/nickrj/rtop">
        <svg role="img" class="github-icon svg-button" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path fill="white" d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/>
        </svg>
      </a>
      <div class="home-popup">
        <h1 class="logo">rtop</h1>
        <h2 class="description">Browse the top images & videos on any subreddit</h2>
        <div class="input-container">
          <input class="subreddit-input" type="text" placeholder="subreddit" autofocus="">
          <button class="input-button">
            <svg class="input-spinner" width="20" height="20" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path d="M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z"></path>
            </svg>
            <svg class="input-arrow" xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 50 50">   
              <path d="M15,10 L35,25 L15,40" stroke="black" stroke-width="4" fill="none" stroke-linecap="round" stroke-linejoin="round"></path>
            </svg>
          </button>
        </div>
        <select class="past-menu" name="menu">
          <option value="hour">past hour</option>
          <option value="day" selected>past day</option>
          <option value="week">past week</option>
          <option value="month">past month</option>
          <option value="year">past year</option>
          <option value="all">all-time</option>
        </select>
        <p class="home-error"></p>
      </div>
      <div class="home-area"></div>
    </div>
    <svg class="home-button svg-button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M3 12h18M3 6h18M3 18h18"></path> 
    </svg>
    <div class="nsfw-banner">
      <h1>Warning: this post is NSFW</h1>
      <button>I'm over 18</button>
    </div>
    <div class="prev-button hidden svg-button">
      <svg xmlns="http://www.w3.org/2000/svg" height="40" viewBox="0 0 10 15">
        <path d="M7 1l-6 6 6 6" stroke="white" stroke-width="1" fill="none" stroke-linejoin="round" stroke-linecap="round"></path>
      </svg>
    </div>
    <div class="next-button hidden svg-button">
      <svg xmlns="http://www.w3.org/2000/svg" height="40" viewBox="0 0 11 15">
        <path d="M3 1l6 6-6 6" stroke="white" stroke-width="1" fill="none" stroke-linejoin="round" stroke-linecap="round"></path>
      </svg>
    </div>
    <div class="counter-container">
      <svg class="fetch-spinner hidden" width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z"></path>
      </svg>
      <p class="counter"></p>
    </div>
  </body>
</html>
